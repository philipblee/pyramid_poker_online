// js/tests/test-execution.js
// CENTRAL TEST EXECUTION - All test routines consolidated here
// Run tests with: TestExecution.runAllTests() or specific categories

class TestExecution {

    // =============================================================================
    // ANALYSIS TESTS
    // =============================================================================

    static runAnalysisTests() {
        console.log('\nüî¨ ======== ANALYSIS TESTS ========');
        // We'll move test functions here
    }

    // =============================================================================
    // WILD CARD TESTS
    // =============================================================================

    static runWildCardTests() {
        console.log('\nüÉè ======== WILD CARD TESTS ========');

        // Test: Parameterized Wild Candidates (no function wrapper - code directly here)
        console.log('\nüß™ Testing Parameterized Wild Candidates (REFACTORED)');

        // Use the same quad test cards
        const test16CardsWithQuads = [
            // Four Aces (4K #1)
            {id: 'A‚ô†_1', rank: 'A', suit: '‚ô†', value: 14, isWild: false},
            {id: 'A‚ô•_2', rank: 'A', suit: '‚ô•', value: 14, isWild: false},
            {id: 'A‚ô¶_3', rank: 'A', suit: '‚ô¶', value: 14, isWild: false},
            {id: 'A‚ô£_4', rank: 'A', suit: '‚ô£', value: 14, isWild: false},

            // Four Kings (4K #2)
            {id: 'K‚ô†_5', rank: 'K', suit: '‚ô†', value: 13, isWild: false},
            {id: 'K‚ô•_6', rank: 'K', suit: '‚ô•', value: 13, isWild: false},
            {id: 'K‚ô¶_7', rank: 'K', suit: '‚ô¶', value: 13, isWild: false},
            {id: 'K‚ô£_8', rank: 'K', suit: '‚ô£', value: 13, isWild: false},

            // Random scattered cards (8 more)
            {id: '7‚ô†_9', rank: '7', suit: '‚ô†', value: 7, isWild: false},
            {id: '3‚ô•_10', rank: '3', suit: '‚ô•', value: 3, isWild: false},
            {id: '8‚ô¶_11', rank: '8', suit: '‚ô¶', value: 8, isWild: false},
            {id: '5‚ô£_12', rank: '5', suit: '‚ô£', value: 5, isWild: false},
            {id: '2‚ô†_13', rank: '2', suit: '‚ô†', value: 2, isWild: false},
            {id: '9‚ô•_14', rank: '9', suit: '‚ô•', value: 9, isWild: false},
            {id: '6‚ô¶_15', rank: '6', suit: '‚ô¶', value: 6, isWild: false},
            {id: '4‚ô£_16', rank: '4', suit: '‚ô£', value: 4, isWild: false}
        ];

        console.log(`\nüìã Testing with ${test16CardsWithQuads.length} card objects`);
        console.log('üéØ This should FIND the Aces as candidates (5K improvement)');

        // Test the refactored generator
        const result = oneWildCandidates(test16CardsWithQuads);

        console.log('\nüîç Checking for Ace candidates:');
        const aceCards = ['A‚ô†', 'A‚ô•', 'A‚ô¶', 'A‚ô£'];
        aceCards.forEach(ace => {
            const found = result.wildCandidates.includes(ace);
            console.log(`   ${ace}: ${found ? '‚úÖ FOUND' : '‚ùå MISSING'}`);
        });

        console.log('\nüìä Baseline Analysis Summary:');
        console.log(result.baselineAnalysis);
    }

    // =============================================================================
    // HAND DETECTOR TESTS
    // =============================================================================

    static runHandDetectorTests() {
        console.log('\nüîç ======== HAND DETECTOR TESTS ========');
        // We'll move hand detector tests here
    }

    // =============================================================================
    // MAIN TEST RUNNER
    // =============================================================================

    static runAllTests() {
        console.log('\nüöÄ ======== RUNNING ALL TESTS ========');
        this.runAnalysisTests();
        this.runWildCardTests();
        this.runHandDetectorTests();
        console.log('\n‚úÖ ======== ALL TESTS COMPLETE ========');
    }
}